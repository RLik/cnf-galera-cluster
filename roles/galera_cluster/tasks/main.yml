---
- name: Install MariaDB Server and required software
  package:
    name:
    - mariadb-server
    - python3-pip

- name: Install pymysql
  pip:
    name: "{{ item }}"
    executable: pip
    state: present
  with_items:
    - PyMySQL

# mysql_secure_installation
- name: Update MariaDB root password
  community.mysql.mysql_user:
    login_unix_socket: "{{ mysql_socket }}"
    name: root
    password: "{{ mysql_root_password }}"
  register: update_root_password
  ignore_errors: yes

# mysql_secure_installation
- name: Update MariaDB root password
  community.mysql.mysql_user:
    login_unix_socket: "{{ mysql_socket }}"
    login_password: "{{ mysql_root_password }}"
    name: root
    password: "{{ mysql_root_password }}"
  when: update_root_password.failed == true

# mysql_secure_installation
- name: Removes anonymous user account for localhost
  community.mysql.mysql_user:
    login_unix_socket: "{{ mysql_socket }}"
    login_password: "{{ mysql_root_password }}"
    name: ''
    state: absent

# mysql_secure_installation
- name: Delete Hostname based MySQL user
  community.mysql.mysql_user:
    login_unix_socket: "{{ mysql_socket }}"
    login_password: "{{ mysql_root_password }}"
    name: root
    host: "{{ ansible_nodename }}"
    state: absent

# mysql_secure_installation
- name: Remove MySQL test database
  community.mysql.mysql_db:
    login_unix_socket: "{{ mysql_socket }}"
    login_password: "{{ mysql_root_password }}"
    name: test
    state: absent

- name: Copy mariadb server config file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    force: true
  with_items:
  - { src: 50-server.cnf.j2, dest: /etc/mysql/mariadb.conf.d/50-server.cnf }

- name: Copy mariadb server config file to primary node
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    force: true
  with_items:
  - { src: 60-galera.cnf.j2, dest: /etc/mysql/mariadb.conf.d/60-galera.cnf }
  
- name: Start Galera cluster
  shell: galera_new_cluster
  when: inventory_hostname in groups["cluster_primary_node"]

- name: Restart MariaDB server on additional cluster node
  service:
    name: mariadb
    state: restarted
  when: inventory_hostname in groups["cluster_additional_node"]